apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: resourcegroupscope
spec:
  environment:
    environmentConfigs:
      - type: Reference
        ref:
          name: vm
  resources:
    - name: resource-group
      base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ResourceGroup
        spec:
          forProvider:
            location: X
          providerConfigRef:
            name: X
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigRef
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.location
          toFieldPath: spec.forProvider.location
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "rg-scope-%s"
          toFieldPath: metadata.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: metadata.annotations['scopeResourceGroupId']
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.annotations['scopeResourceGroupName']
    - name: uama
      base:
        apiVersion: managedidentity.azure.upbound.io/v1beta1
        kind: UserAssignedIdentity
        spec:
          forProvider:
            name: X
            location: X
            resourceGroupName: X
          providerConfigRef:
            name: X
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "identity-%s"
          toFieldPath: metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.location
          toFieldPath: spec.forProvider.location
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations['scopeResourceGroupName']
          toFieldPath: spec.forProvider.resourceGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigRef
          toFieldPath: spec.providerConfigRef.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.clientId
          toFieldPath: metadata.labels['clientId']
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.principalId
          toFieldPath: metadata.labels['principalId']
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: metadata.annotations['identityId']
    - name: role-assignment-contributor
      base:
        apiVersion: authorization.azure.upbound.io/v1beta1
        kind: RoleAssignment
        spec:
          forProvider:
            principalId: X
            roleDefinitionName: Contributor
            scope: X
          providerConfigRef:
            name: X
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels['principalId']
          toFieldPath: spec.forProvider.principalId
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations['scopeResourceGroupId']
          toFieldPath: spec.forProvider.scope
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigRef
          toFieldPath: spec.providerConfigRef.name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "role-contributor-%s"
          toFieldPath: metadata.name
    - name: role-assignment-user-access-administrator
      base:
        apiVersion: authorization.azure.upbound.io/v1beta1
        kind: RoleAssignment
        spec:
          forProvider:
            principalId: X
            roleDefinitionName: User Access Administrator
            scope: X
          providerConfigRef:
            name: X
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels['principalId']
          toFieldPath: spec.forProvider.principalId
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations['scopeResourceGroupId']
          toFieldPath: spec.forProvider.scope
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "role-uaa-%s"
          toFieldPath: metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.providerConfigRef
          toFieldPath: spec.providerConfigRef.name
    - name: provider-config
      base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: UserAssignedManagedIdentity
          subscriptionID: bf34a2a9-7f5f-4d14-b6e9-ebb98711dd78
          tenantID: f2658745-f87e-4fb9-8ff6-6b616a8cec41
          clientID: XXX
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels['clientId']
          toFieldPath: spec.clientID
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "provider-config-%s"
          toFieldPath: metadata.name
    - name: github-repo
      base:
        apiVersion: repository.github.crossplane.io/v1alpha1
        kind: Repository
        spec:
          forProvider:
            name: X
            organization: "mobilabsolutions"
            visibility: private
          providerConfigRef:
            name: github-provider-config
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "crossplane-demo1-%s"
          toFieldPath: spec.forProvider.name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "github-repo-%s"
          toFieldPath: metadata.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.name
          toFieldPath: metadata.annotations['repoName']
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.organization
          toFieldPath: metadata.annotations['repoOrganization']
    - name: vmid
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: planum.mblb.net/v1alpha1
              kind: VmId
              metadata:
                name: X
              spec:
                identity: X
                vmResourceGroup: X
                vmName: X
          providerConfigRef:
            name: kubernetes
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.annotations['identityId']
          toFieldPath: spec.forProvider.manifest.spec.identity
        - type: FromEnvironmentFieldPath
          fromFieldPath: vmResourceGroup
          toFieldPath: spec.forProvider.manifest.spec.vmResourceGroup
        - type: FromEnvironmentFieldPath
          fromFieldPath: vmName
          toFieldPath: spec.forProvider.manifest.spec.vmName
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "vm-id-%s"
          toFieldPath: spec.forProvider.manifest.metadata.name
    - name: argocd-application
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Application
              metadata:
                name: X
                namespace: argocd
              spec:
                destination:
                  namespace: X
                  server: https://kubernetes.default.svc
                project: default
                source:
                  directory:
                    jsonnet: {}
                    recurse: true
                  path: .
                  repoURL: "https://github.com/mobilabsolutions/crossplane-demo1-project2.git"
                  targetRevision: HEAD
                syncPolicy:
                  automated: {}
          providerConfigRef:
            name: kubernetes
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.destination.namespace
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.annotations['repoOrganization']
              - fromFieldPath: metadata.annotations['repoName']
            strategy: string
            string:
              fmt: "https://github.com/%s/%s"
          toFieldPath: spec.forProvider.manifest.spec.source.repoURL
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "argocd-app-%s"
          toFieldPath: metadata.name
  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XResourceGroupScope