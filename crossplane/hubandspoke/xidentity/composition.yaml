apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xidentities.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  environment:
    environmentConfigs:
      - type: Selector
        selector:
          matchLabels:
            - key: type
              type: Value
              value: xnetwork
            - key: name
              type: FromCompositeFieldPath
              valueFromFieldPath: spec.parameters.xNetworkName

  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XIdentity #has to be singular

  mode: Pipeline
  pipeline:

    - step: render-identities-objects
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $locationMappings := dict 
              "westeurope" "weu"
              "northeurope" "neu"
              "eastus" "eus"
              "germanywestcentral" "gwc"
              "switzerlandnorth" "sln"
            }}
            {{ $locationAbbreviation := index $locationMappings $.observed.composite.resource.spec.resourceConfig.location }}
            {{ $outputs := (index $.context "apiextensions.crossplane.io/environment").outputs }}
            {{ $prefix := printf "%s-%s-%s" $.observed.composite.resource.metadata.name $.observed.composite.resource.spec.resourceConfig.environment $locationAbbreviation  }}
            {{- range $subnets := .observed.composite.resource.spec.parameters.subnets }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $subnets.name }}
                gotemplating.fn.crossplane.io/ready: "True"
                crossplane.io/external-name: {{ $subnets.name }}
              labels:
                name: {{ $subnets.name | lower }}
              name: {{ $subnets.name | lower }}
            spec:
              forProvider:
                addressPrefixes: 
                - {{ printf "%s.%s" $.observed.composite.resource.spec.parameters.virtualNetworkPrefix $subnets.addressPostfix }}
                resourceGroupName: {{ $outputs.ResourceGroupName }}
                virtualNetworkName: {{ $outputs.VirtualNetworkName }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ printf "rt-association-%s" $subnets.name | lower }}
                gotemplating.fn.crossplane.io/ready: "True"
              name: {{ printf "rt-association-%s" $subnets.name | lower }}
            spec:
              forProvider:
                routeTableId: {{ $outputs.routeTableId }}
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    name: {{ $subnets.name | lower }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            {{ if contains "virtual" $subnets.name }}
            apiVersion: network.azure.upbound.io/v1beta1
            kind: NetworkInterface
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: nic-vm-addc-{{ $prefix }}
                gotemplating.fn.crossplane.io/ready: "True"
              name: nic-vm-addc-{{ $prefix }}
            spec:
              forProvider:
                ipConfiguration:
                  - name: internal
                    privateIpAddressAllocation: Dynamic
                    subnetIdSelector:
                      matchLabels:
                        name: {{ $subnets.name }}
                location: {{ $.observed.composite.resource.spec.resourceConfig.location }}
                resourceGroupName: {{ $outputs.ResourceGroupName }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            apiVersion: compute.azure.upbound.io/v1beta1
            kind: WindowsVirtualMachine
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: vm-addc-{{ $prefix }}
                gotemplating.fn.crossplane.io/ready: "True"
              labels:
                name: vm-addc-{{ $prefix }}
              name: vm-addc-{{ $prefix }}
            spec:
              forProvider:
                adminPasswordSecretRef:
                  key: {{ index $.observed.composite.resource.spec.parameters.secretRef.keys 0 }}
                  name: {{ $.observed.composite.resource.spec.parameters.secretRef.name }}
                  namespace: {{ $.observed.composite.resource.spec.parameters.secretRef.namespace }}
                adminUsername: adminuser
                location: {{ $.observed.composite.resource.spec.resourceConfig.location }}
                resourceGroupName: {{ $outputs.ResourceGroupName }}
                computerName: "addc-planum"
                networkInterfaceIdsSelector:
                  matchControllerRef: true
                osDisk:
                - caching: ReadWrite
                  storageAccountType: Premium_LRS
                  diskSizeGb: 128
                size: Standard_B2ms
                provisionVmAgent: true
                identity:
                - type: "SystemAssigned"
                sourceImageReference:
                - offer: WindowsServer
                  publisher: MicrosoftWindowsServer
                  sku: 2022-Datacenter
                  version: latest
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            {{ end }}
            {{- end }}
            ---
            apiVersion: recoveryservices.azure.upbound.io/v1beta1
            kind: Vault
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: rsv-{{ $prefix }}
                gotemplating.fn.crossplane.io/ready: "True"
              name: rsv-{{ $prefix }}
            spec:
              forProvider:
                location: {{ $.observed.composite.resource.spec.resourceConfig.location }}
                resourceGroupName: {{ $outputs.ResourceGroupName }}
                sku: {{ $.observed.composite.resource.spec.parameters.vaultSku }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}