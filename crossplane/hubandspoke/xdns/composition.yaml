apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xdnss.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XDns #has to be singular

  mode: Pipeline
  pipeline:
    - step: render-templates
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{ $prefix := printf "%s-%s-%s" $.observed.composite.resource.metadata.name $.observed.composite.resource.spec.resourceConfig.environment $.observed.composite.resource.spec.resourceConfig.location  }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateDNSResolver
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: dnspr-{{ $prefix }}
              name: dnspr-{{ $prefix }}
            spec:
              forProvider:
                location: {{ $.observed.composite.resource.spec.resourceConfig.location }}
                resourceGroupName: {{ $.observed.composite.resource.spec.parameters.resourceGroupName }}
                virtualNetworkId: {{ $.observed.composite.resource.spec.parameters.hubVirtualNetworkId }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            apiVersion: planum.mblb.net/v1alpha1
            kind: InboundEndpoint
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: in-{{ $prefix }}
              name: in-{{ $prefix }}
            spec:
              resourceGroupName: {{ $.observed.composite.resource.spec.parameters.resourceGroupName }}
              location: {{ $.observed.composite.resource.spec.resourceConfig.location }}
              privateDnsResolverName: {{ printf "dnspr-%s" $prefix }}
              subnetId: {{ $.observed.composite.resource.spec.parameters.dnsSubnetId }}
            ---
            {{- range $name := .observed.composite.resource.spec.parameters.dnsZoneNames }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateDNSZone
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $name }}
                crossplane.io/external-name: {{ $name }}
              name: {{ $name | replace "." "-"}}
            spec:
              forProvider:
                resourceGroupName: {{ $.observed.composite.resource.spec.parameters.resourceGroupName }}
              providerConfigRef:
                  name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateDNSZoneVirtualNetworkLink
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $name }}-link
                crossplane.io/external-name: {{ $name }}-link
              name: to-hub-{{ $name | replace "." "-"}}
            spec:
              forProvider:
                privateDnsZoneName: {{ $name }}
                resourceGroupName: {{ $.observed.composite.resource.spec.parameters.resourceGroupName }}
                virtualNetworkId: {{ $.observed.composite.resource.spec.parameters.hubVirtualNetworkId }}
            ---
            apiVersion: planum.mblb.net/v1alpha1
            kind: XDns
            {{ if eq $.observed.resources nil }}
            status:
              outputs: {}
            {{ else }}
            status:
              outputs:
                {{ $name | lower }}: {{ (index $.observed.resources $name).resource.status.atProvider.id }}
                privateDnsResolverInboundEndpointIp: {{ (index $.observed.resources (printf "in-%s" $prefix)).resource.status.atProvider.inboundEndpointIp }}
            {{ end }}
            {{- end }}

    - step: auto-ready
      functionRef:
        name: function-auto-ready
