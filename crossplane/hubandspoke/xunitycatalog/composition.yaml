apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xunitycatalogs.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  environment:
    environmentConfigs:
    - type: Selector
      selector:
        matchLabels:
        - key: type
          type: Value
          value: xlakehouse
        - key: name
          type: FromCompositeFieldPath
          valueFromFieldPath: spec.parameters.xLakehouseName

  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XUnityCatalog #has to be singular

  mode: Pipeline
  pipeline:

    - step: render-unity-catalog
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $locationMappings := dict 
              "westeurope" "weu"
              "northeurope" "neu"
              "eastus" "eus"
              "germanywestcentral" "gwc"
              "switzerlandnorth" "sln"
            }}
            {{ $outputs := (index $.context "apiextensions.crossplane.io/environment").outputs }}
            {{ $locationAbbreviation := index $locationMappings $.observed.composite.resource.spec.resourceConfig.location }}
            {{ $prefix := printf "%s-%s-%s" $.observed.composite.resource.metadata.name $.observed.composite.resource.spec.resourceConfig.environment $locationAbbreviation  }}
            ---
            apiVersion: metastoreassignment.mobilabsolutions.com/v1alpha1
            kind: Assignment
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: metastore-assignment-dbw
                gotemplating.fn.crossplane.io/ready: "True"
                crossplane.io/external-name: metastore-assignment-dbw
              name: 
            spec:
              forProvider:
                metastoreId: {{ $.observed.composite.resource.spec.parameters.metastoreId }}
                workspaceId: {{ $outputs.dbwId }}
              providerConfigRef:
                  name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
                        
        
    - step: auto-ready
      functionRef:
        name: function-auto-ready