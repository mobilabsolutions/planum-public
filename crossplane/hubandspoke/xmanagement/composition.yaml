apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xmanagements.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XManagement #has to be singular

  mode: Pipeline
  pipeline:

    - step: render-management-objects
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $locationMappings := dict 
              "westeurope" "weu"
              "northeurope" "neu"
              "eastus" "eus"
              "germanywestcentral" "gwc"
              "switzerlandnorth" "sln"
            }}
            {{ $locationAbbreviation := index $locationMappings $.observed.composite.resource.spec.resourceConfig.location }}
            {{ $prefix := printf "%s-%s-%s" $.observed.composite.resource.metadata.name $.observed.composite.resource.spec.resourceConfig.environment $locationAbbreviation  }}
            {{- range $subnets := .observed.composite.resource.spec.parameters.subnets }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $subnets.name }}
                gotemplating.fn.crossplane.io/ready: "True"
                crossplane.io/external-name: {{ $subnets.name }}
              labels:
                name: {{ $subnets.name | lower }}
              name: {{ $subnets.name | lower }}
            spec:
              forProvider:
                addressPrefixes: 
                - {{ printf "%s.%s" $.observed.composite.resource.spec.parameters.virtualNetworkPrefix $subnets.addressPostfix }}
                resourceGroupName: {{ $outputs.ResourceGroupName }}
                virtualNetworkName: {{ $outputs.VirtualNetworkName }}
                {{ if contains "dbw" $subnets.name }}
                delegation:
                - name: "subnet-delegation"
                  serviceDelegation:
                  - name: "Microsoft.Databricks/workspaces"
                    actions: 
                    - "Microsoft.Network/virtualNetworks/subnets/join/action"
                    - "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action"
                    - "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"
                {{ end }}
              providerConfigRef:
                  name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---
            {{ if ne $.observed.resources nil }}
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: rt-association-{{ $subnets.name }}
                gotemplating.fn.crossplane.io/ready: "True"
              name: rt-association-{{ $subnets.name }}
            spec:
              forProvider:
                routeTableId: {{ $outputs.routeTableId }}
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    name: {{ $subnets.name }}
              providerConfigRef:
                name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            ---