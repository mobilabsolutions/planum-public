apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcontainers.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  environment:
    environmentConfigs:
      - type: Selector
        selector:
          matchLabels:
            - key: type
              type: Value
              value: xlakehouse
            - key: name
              type: FromCompositeFieldPath
              valueFromFieldPath: spec.xLakehouse

      - type: Selector
        selector:
          matchLabels:
            - key: name
              type: Value
              value: vm

  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XContainer #has to be singular

  mode: Pipeline
  pipeline:
  - step: render-dmlz-objects
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{ $outputs := (index $.context "apiextensions.crossplane.io/environment").outputs }}
          {{ $objectId := (index $.context "apiextensions.crossplane.io/environment").objectId }}
          {{ range $container := $.observed.composite.resource.spec.containers }}
          ---
          apiVersion: authorization.azure.upbound.io/v1beta1
          kind: RoleAssignment
          metadata:
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: assignment-blob-contributor
              gotemplating.fn.crossplane.io/ready: "True"
            name: assignment-blob-contributor-{{ $.observed.composite.resource.metadata.name }}
          spec:
            forProvider:
              principalId: {{ $objectId }}
              roleDefinitionName: "Storage Blob Data Contributor"
              scope: {{ $outputs.adlsId }}
            providerConfigRef:
              name: {{ $.observed.composite.resource.spec.providerConfigName }}
          ---
          apiVersion: storage.azure.upbound.io/v1beta1
          kind: Container
          metadata:
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $container.name }}
              gotemplating.fn.crossplane.io/ready: "True"
              crossplane.io/external-name: {{ $container.name }}
            name: {{ $container.name }}-{{ $.observed.composite.resource.metadata.name }}
          spec:
            forProvider:
              containerAccessType: {{ $container.accessType }}
              storageAccountName: {{ $outputs.adlsName }}
            providerConfigRef:
              name: {{ $.observed.composite.resource.spec.providerConfigName }}
          {{ end }}

  - step: auto-ready
    functionRef:
      name: function-auto-ready
