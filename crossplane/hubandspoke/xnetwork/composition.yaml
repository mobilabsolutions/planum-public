apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XNetwork #has to be singular

  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: upbound-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
        - name: common-parameters
          patches:
          - type: FromCompositeFieldPath
            fromFieldPath: spec.resourceConfig.providerConfigName
            toFieldPath: spec.providerConfigRef.name
          - type: FromCompositeFieldPath
            fromFieldPath: spec.resourceConfig.location
            toFieldPath: spec.forProvider.location
        
        resources:
        - name: resource-group
          base:
            apiVersion: azure.upbound.io/v1beta1
            kind: ResourceGroup
            spec:
              forProvider:
                location:
          patches:
            - type: PatchSet
              patchSetName: common-parameters
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs['ResourceGroupId']
            - type: ToCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: status.outputs['ResourceGroupName']
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.resourceConfig.environment
                  - fromFieldPath: spec.resourceConfig.location
                strategy: string
                string:
                  fmt: "rg-%s-%s-%s"
              toFieldPath: metadata.name

        - name: virtual-network
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: VirtualNetwork
            spec:
              forProvider:
                dnsServers: 
                addressSpace:
                location:
                resourceGroupNameSelector:
                  matchControllerRef: true
          patches:
            - type: PatchSet
              patchSetName: common-parameters
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.resourceConfig.environment
                  - fromFieldPath: spec.resourceConfig.location
                strategy: string
                string:
                  fmt: "vnet-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.parameters.dnsServers
              toFieldPath: spec.forProvider.dnsServers
            - type: FromCompositeFieldPath
              fromFieldPath: spec.parameters.vnetAddressSpace
              toFieldPath: spec.forProvider.addressSpace
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs['VirtualNetworkId']
            - type: ToCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: status.outputs['VirtualNetworkName']
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.addressSpace[0]
              toFieldPath: status.outputs['vnetAddressSpace']

        - name: environment-config
          readinessChecks:
          - type: None
          base:
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: EnvironmentConfig
            metadata:
              labels:
                type: xnetwork
                name: 
              name: 
            data:
              outputs:
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.resourceConfig.environment
                  - fromFieldPath: spec.resourceConfig.location
                strategy: string
                string:
                  fmt: "ec-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: metadata.labels.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs
              toFieldPath: data.outputs

    - step: render-subnets
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            apiVersion: planum.mblb.net/v1alpha1
            kind: XNetwork
            {{ if eq $.observed.resources nil }}
            status:
              outputs: {}
            {{ else }}
            status:
              outputs:
                routeTableId: {{ $.observed.composite.resource.spec.parameters.routeTableId }}
                {{ $temp := $.observed.composite.resource.status.outputs.vnetAddressSpace | toYaml | toString | quote }}
                vnetAddressPrefix: {{ $temp }}
            {{ end }}
            ---
            {{if ne $.observed.composite.resource.status.outputs.VirtualNetworkId nil }}
            {{- range $subnets := .observed.composite.resource.spec.parameters.subnets }}
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $subnets.name }}
                gotemplating.fn.crossplane.io/ready: "True"
                crossplane.io/external-name: {{ $subnets.name }}
              name: {{ $subnets.name | lower }}
            spec:
              forProvider:
                addressPrefixes: 
                - {{ $subnets.addressSpace }}
                resourceGroupNameSelector:
                  matchControllerRef: true
                virtualNetworkNameSelector:
                  matchControllerRef: true
              providerConfigRef:
                  name: {{ $.observed.composite.resource.spec.resourceConfig.providerConfigName }}
            {{- end }}
            ---
            apiVersion: planum.mblb.net/v1alpha1
            kind: XNetwork
            status:
              outputs:
              {{- range $observed := $.observed.resources }}
                {{ if ne $observed.resource.status.atProvider.id nil }}
                {{ $observed.resource.metadata.name | lower }}: {{ $observed.resource.status.atProvider.id }}
                {{ printf "%s_url" $observed.resource.metadata.name | lower }}: {{ printf "https://portal.azure.com/#@mobilabsolutions.com/resource%s" $observed.resource.status.atProvider.id }}
                {{ end }}
              {{- end }}
            {{ end }}

    - step: auto-ready
      functionRef:
        name: function-auto-ready
