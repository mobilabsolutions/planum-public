apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xlakehouses.planum.mblb.net #has to be plural
  labels:
    planum.mblb.net/managed-by: "true"
spec:
  environment:
    environmentConfigs:
      - type: Selector
        selector:
          matchLabels:
            - key: type
              type: Value
              value: xnetwork
            - key: name
              type: FromCompositeFieldPath
              valueFromFieldPath: spec.xNetworkName

      - type: Selector
        selector:
          matchLabels:
            - key: type
              type: Value
              value: xdns
            - key: name
              type: FromCompositeFieldPath
              valueFromFieldPath: spec.xDnsName

      - type: Selector
        selector:
          matchLabels:
            - key: name
              type: Value
              value: vm

  compositeTypeRef:
    apiVersion: planum.mblb.net/v1alpha1
    kind: XLakehouse #has to be singular

  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: upbound-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        metadata:
          name:
        resources:
        - name: environment-config
          readinessChecks:
          - type: None
          base:
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: EnvironmentConfig
            metadata:
              labels:
                type: xlakehouse
                name: 
              name: 
            data:
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "ec-spoke-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: metadata.labels.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs
              toFieldPath: data.outputs

        - name: snet-lakehouse-pe
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              name: snet-lakehouse-pe
              labels:
                planum.mblb.net/component: snet-lakehouse-pe
            spec:
              forProvider:
                addressPrefixes:
                virtualNetworkName:
                resourceGroupName:
          patches:
          - type: FromCompositeFieldPath
            fromFieldPath: spec.providerConfigName
            toFieldPath: spec.providerConfigRef.name
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.ResourceGroupName
            toFieldPath: spec.forProvider.resourceGroupName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.VirtualNetworkName
            toFieldPath: spec.forProvider.virtualNetworkName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.vnetAddressPrefix
            toFieldPath: spec.forProvider.addressPrefixes[0]
            transforms:
            - type: string
              string:
                type: Format
                fmt: "%s.0/26"

        - name: snet-lakehouse-dbw-public
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              name: snet-lakehouse-dbw-public
              labels:
                planum.mblb.net/component: snet-lakehouse-dbw-public
            spec:
              forProvider:
                addressPrefixes:
                virtualNetworkName:
                resourceGroupName:
                delegation:
                - name: "subnet-delegation"
                  serviceDelegation:
                  - name: "Microsoft.Databricks/workspaces"
                    actions: 
                    - "Microsoft.Network/virtualNetworks/subnets/join/action"
                    - "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action"
                    - "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"
          patches:
          - type: FromCompositeFieldPath
            fromFieldPath: spec.providerConfigName
            toFieldPath: spec.providerConfigRef.name
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.ResourceGroupName
            toFieldPath: spec.forProvider.resourceGroupName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.VirtualNetworkName
            toFieldPath: spec.forProvider.virtualNetworkName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.vnetAddressPrefix
            toFieldPath: spec.forProvider.addressPrefixes[0]
            transforms:
            - type: string
              string:
                type: Format
                fmt: "%s.128/26"
          - type: ToCompositeFieldPath
            fromFieldPath: status.atProvider.id
            toFieldPath: status.outputs.dbwPublicSubnetId

        - name: snet-lakehouse-dbw-private
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              name: snet-lakehouse-dbw-private
              labels:
                planum.mblb.net/component: snet-lakehouse-dbw-private
            spec:
              forProvider:
                addressPrefixes:
                virtualNetworkName:
                resourceGroupName:
                delegation:
                - name: "subnet-delegation"
                  serviceDelegation:
                  - name: "Microsoft.Databricks/workspaces"
                    actions: 
                    - "Microsoft.Network/virtualNetworks/subnets/join/action"
                    - "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action"
                    - "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"
          patches:
          - type: FromCompositeFieldPath
            fromFieldPath: spec.providerConfigName
            toFieldPath: spec.providerConfigRef.name
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.ResourceGroupName
            toFieldPath: spec.forProvider.resourceGroupName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.VirtualNetworkName
            toFieldPath: spec.forProvider.virtualNetworkName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.vnetAddressPrefix
            toFieldPath: spec.forProvider.addressPrefixes[0]
            transforms:
            - type: string
              string:
                type: Format
                fmt: "%s.192/26"
          - type: ToCompositeFieldPath
            fromFieldPath: status.atProvider.id
            toFieldPath: status.outputs.dbwPrivateSubnetId
              
        - name: snet-lakehouse-ir
          readinessChecks:
          - type: None
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: Subnet
            metadata:
              name: snet-lakehouse-ir
              labels:
                planum.mblb.net/component: snet-lakehouse-ir
            spec:
              forProvider:
                addressPrefixes:
                virtualNetworkName:
                resourceGroupName:
          patches:
          - type: FromCompositeFieldPath
            fromFieldPath: spec.providerConfigName
            toFieldPath: spec.providerConfigRef.name
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.ResourceGroupName
            toFieldPath: spec.forProvider.resourceGroupName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.VirtualNetworkName
            toFieldPath: spec.forProvider.virtualNetworkName
          - type: FromEnvironmentFieldPath
            fromFieldPath: outputs.vnetAddressPrefix
            toFieldPath: spec.forProvider.addressPrefixes[0]
            transforms:
            - type: string
              string:
                type: Format
                fmt: "%s.64/29"

        - name: storage-lakehouse
          base:
            apiVersion: storage.azure.upbound.io/v1beta1
            kind: Account
            metadata:
              name: storage-lakehouse
            spec:
              forProvider:
                accountKind: StorageV2
                accountReplicationType: LRS
                publicNetworkAccessEnabled: false
                sharedAccessKeyEnabled: true
                accessTier: "Hot"
                minTlsVersion: "TLS1_2"
                blobProperties:
                  - deleteRetentionPolicy: 
                    - days: 7
                enableHttpsTrafficOnly: true
                accountTier: Standard
                isHnsEnabled: true
              providerConfigRef:
                name: ""
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "adls%s%s%s"
              toFieldPath: metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: ToCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: status.outputs.adlsName
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs.adlsId
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.primaryDfsEndpoint
              toFieldPath: status.outputs.dfsEndpoint

        - name: datafactory-lakehouse
          base:
            apiVersion: datafactory.azure.upbound.io/v1beta1
            kind: Factory
            metadata:
              name: datafactory-lakehouse
            spec:
              forProvider:
                publicNetworkEnabled: false
                managedVirtualNetworkEnabled: true
                identity:
                - type: "SystemAssigned"
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "adf-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs.adfId
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.identity[0].principalId
              toFieldPath: status.outputs.adfIdentityPrincipalId

        - name: self-hosted-ir
          base:
            apiVersion: datafactory.azure.upbound.io/v1beta1
            kind: IntegrationRuntimeSelfHosted
            metadata:
              name: self-hosted-ir
            spec:
              forProvider:
                dataFactoryIdSelector:
                  matchControllerRef: true
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "self-hosted-ir-%s-%s-%s"
              toFieldPath: metadata.name

        - name: dbw-lakehouse-nsg
          base:
            apiVersion: planum.mblb.net/v1alpha1
            kind: XDbwNsg
            metadata:
              name: dbw-lakehouse-nsg
            spec:
              resourceGroupName: ""
              dbwPublicSubnetId: ""
              dbwPrivateSubnetId: ""
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.resourceGroupName
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigName
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.location
            - type: FromCompositeFieldPath
              fromFieldPath: spec.environment
              toFieldPath: spec.environment
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.dbwPublicSubnetId
              toFieldPath: spec.dbwPublicSubnetId
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.dbwPrivateSubnetId
              toFieldPath: spec.dbwPrivateSubnetId
            - type: ToCompositeFieldPath
              fromFieldPath: status.outputs.privateNsgAssociationId
              toFieldPath: status.outputs.privateNsgAssociationId
            - type: ToCompositeFieldPath
              fromFieldPath: status.outputs.publicNsgAssociationId
              toFieldPath: status.outputs.publicNsgAssociationId

        - name: dbw-lakehouse
          base:
            apiVersion: databricks.azure.upbound.io/v1beta1
            kind: Workspace
            metadata:
              labels:
                planum.mblb.net/component: dbw-lakehouse
              name: dbw-lakehouse
            spec:
              forProvider:
                sku: premium
                publicNetworkAccessEnabled: false
                networkSecurityGroupRulesRequired: "NoAzureDatabricksRules"
                customParameters:
                  - noPublicIp: true
                    publicSubnetNameSelector: 
                      matchLabels:
                        planum.mblb.net/component: snet-lakehouse-dbw-public
                    publicSubnetNetworkSecurityGroupAssociationId: ""
                    privateSubnetNameSelector: 
                      matchLabels:
                        planum.mblb.net/component: snet-lakehouse-dbw-private
                    privateSubnetNetworkSecurityGroupAssociationId: ""
                    virtualNetworkId:
                    vnetAddressPrefix:
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "dbw-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.VirtualNetworkId
              toFieldPath: spec.forProvider.customParameters[0].virtualNetworkId
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.vnetAddressPrefix
              toFieldPath: spec.forProvider.customParameters[0].vnetAddressPrefix
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.publicNsgAssociationId
              toFieldPath: spec.forProvider.customParameters[0].publicSubnetNetworkSecurityGroupAssociationId
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.privateNsgAssociationId
              toFieldPath: spec.forProvider.customParameters[0].privateSubnetNetworkSecurityGroupAssociationId
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs.databricksId
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.workspaceUrl
              toFieldPath: status.outputs.dbwUrl
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: dbac-lakehouse
          base:
            apiVersion: databricks.azure.upbound.io/v1beta1
            kind: AccessConnector
            metadata:
              name: dbac-lakehouse
            spec:
              forProvider:
                identity:
                - type: SystemAssigned
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.identity[0].principalId
              toFieldPath: status.outputs.accessConnectorIdentityPrincipalId
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs.accessConnectorId
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "dbac-%s-%s-%s"
              toFieldPath: metadata.name

        - name: vault-lakehouse
          base:
            apiVersion: keyvault.azure.upbound.io/v1beta1
            kind: Vault
            metadata:
              name: vault-lakehouse
            spec:
              forProvider:
                skuName: premium
                publicNetworkAccessEnabled: false
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: tenantId
              toFieldPath: spec.forProvider.tenantId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.id
              toFieldPath: status.outputs.keyvaultId
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "kv-%s-%s-%s"
              toFieldPath: metadata.name

        - name: accesspolicy-keyvault-lakehouse
          base:
            apiVersion: keyvault.azure.upbound.io/v1beta1
            kind: AccessPolicy
            metadata:
              name: default-kv-policy
            spec:
              forProvider:
                secretPermissions: ["Set", "Delete", "Get", "List"]
                keyPermissions: []
                keyVaultIdSelector:
                  matchControllerRef: true
                objectId: 
                tenantId: 
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: tenantId
              toFieldPath: spec.forProvider.tenantId
            - type: FromEnvironmentFieldPath
              fromFieldPath: objectId
              toFieldPath: spec.forProvider.objectId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name

        - name: adf-to-kv
          base:
            apiVersion: datafactory.azure.upbound.io/v1beta1
            kind: LinkedServiceKeyVault
            metadata:
              name: adf-to-kv
            spec:
              forProvider:
                dataFactoryIdSelector:
                  matchControllerRef: true
                keyVaultIdSelector:
                  matchControllerRef: true
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "adf-to-kv-%s-%s-%s"
              toFieldPath: metadata.name

        - name: adf-to-adls2
          base:
            apiVersion: datafactory.azure.upbound.io/v1beta1
            kind: LinkedServiceDataLakeStorageGen2
            metadata:
              name: adf-to-adls2
            spec:
              forProvider:
                dataFactoryIdSelector:
                  matchControllerRef: true
                url: ""
                useManagedIdentity: true
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.dfsEndpoint
              toFieldPath: spec.forProvider.url
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "adf-to-adls2-%s-%s-%s"
              toFieldPath: metadata.name

        - name: adf-to-dbw
          base:
            apiVersion: datafactory.azure.upbound.io/v1beta1
            kind: LinkedServiceAzureDatabricks
            metadata:
              name: adf-to-dbw
            spec:
              forProvider:
                adbDomain:
                dataFactoryIdSelector:
                  matchControllerRef: true
                msiWorkSpaceResourceIdSelector:
                  matchControllerRef: true
                newClusterConfig:
                - clusterVersion: "10.4.x-scala2.12"
                  nodeType: "Standard_D4a_v4"
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "adf-to-dbw-%s-%s-%s"
              toFieldPath: metadata.name
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: status.outputs.dbwUrl
                strategy: string
                string:
                  fmt: "https://%s"
              toFieldPath: spec.forProvider.adbDomain

        - name: assignment-dbac-to-adls
          base:
            apiVersion: authorization.azure.upbound.io/v1beta1
            kind: RoleAssignment
            metadata:
              name: assignment-dbac-to-adls
            spec:
              forProvider:
                principalId:
                roleDefinitionName: "Storage Blob Data Contributor"
                scope:
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.accessConnectorIdentityPrincipalId
              toFieldPath: spec.forProvider.principalId
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adlsId
              toFieldPath: spec.forProvider.scope
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "assignment-dbac-to-adls-%s-%s-%s"
              toFieldPath: metadata.name

        - name: assignment-adf-to-adls
          base:
            apiVersion: authorization.azure.upbound.io/v1beta1
            kind: RoleAssignment
            metadata:
              name: assignment-adf-to-adls
            spec:
              forProvider:
                principalId: 
                roleDefinitionName: "Storage Blob Data Contributor"
                scope: 
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adfIdentityPrincipalId
              toFieldPath: spec.forProvider.principalId
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adlsId
              toFieldPath: spec.forProvider.scope
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "assignment-adf-to-adls-%s-%s-%s"
              toFieldPath: metadata.name

        - name: assignment-adf-to-dbw
          base:
            apiVersion: authorization.azure.upbound.io/v1beta1
            kind: RoleAssignment
            metadata:
              name: assignment-adf-to-dbw
            spec:
              forProvider:
                principalId: 
                roleDefinitionName: "Contributor"
                scope: 
          patches:
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adfIdentityPrincipalId
              toFieldPath: spec.forProvider.principalId
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.databricksId
              toFieldPath: spec.forProvider.scope
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "assignment-adf-to-dbw-%s-%s-%s"
              toFieldPath: metadata.name

        - name: pe-kv-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              name: pe-kv-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-kv-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-kv-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["vault"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-kv-lakehouse-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.vaultcore.azure.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.keyvaultId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: pe-dbw-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              labels:
                planum.mblb.net/component: pe-dbw-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-dbw-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-dbw-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["databricks_ui_api"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-dbw-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.azuredatabricks.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.databricksId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: pe-adf-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              labels:
                planum.mblb.net/component: pe-adf-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-adf-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-adf-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["dataFactory"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-adf-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.datafactory.azure.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adfId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: pe-adls-blob-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              labels:
                planum.mblb.net/component: pe-adls-blob-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-adls-blob-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-adls-blob-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["blob"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-adls-blob-lakehouse-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.blob.core.windows.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adlsId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: pe-adls-dfs-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              labels:
                planum.mblb.net/component: pe-adls-dfs-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-adls-dfs-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-adls-dfs-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["dfs"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-adls-dfs-lakehouse-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.dfs.core.windows.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adlsId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: pe-adls-file-lakehouse
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              labels:
                planum.mblb.net/component: pe-dls-file-lakehouse
            spec:
              forProvider:
                privateDnsZoneGroup:
                  - name: pdzg-adls-file-lakehouse
                    privateDnsZoneIds:
                    - ""
                privateServiceConnection:
                  - isManualConnection: false
                    name: psc-adls-file-lakehouse
                    privateConnectionResourceId: ""
                    subresourceNames: ["file"]
                subnetIdSelector:
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: CombineFromComposite
              combine:
                variables:
                  - fromFieldPath: metadata.name
                  - fromFieldPath: spec.environment
                  - fromFieldPath: spec.location
                strategy: string
                string:
                  fmt: "pe-adls-file-lakehouse-%s-%s-%s"
              toFieldPath: metadata.name
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.ResourceGroupName
              toFieldPath: spec.forProvider.resourceGroupName
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs['privatelink.dfs.core.windows.net']
              toFieldPath: spec.forProvider.privateDnsZoneGroup[0].privateDnsZoneIds[0]
            - type: FromCompositeFieldPath
              fromFieldPath: status.outputs.adlsId
              toFieldPath: spec.forProvider.privateServiceConnection[0].privateConnectionResourceId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name
            - type: FromCompositeFieldPath
              fromFieldPath: spec.location
              toFieldPath: spec.forProvider.location

        - name: rt-association-snet-lakehouse-pe
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              name: rt-association-snet-lakehouse-pe
            spec:
              forProvider:
                routeTableId: 
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-pe
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.routeTableId
              toFieldPath: spec.forProvider.routeTableId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name

        - name: rt-association-snet-lakehouse-dbw-public
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              name: rt-association-snet-lakehouse-dbw-public
            spec:
              forProvider:
                routeTableId: 
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-dbw-public
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.routeTableId
              toFieldPath: spec.forProvider.routeTableId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name

        - name: rt-association-snet-lakehouse-dbw-private
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              name: rt-association-snet-lakehouse-dbw-private
            spec:
              forProvider:
                routeTableId: 
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-dbw-private
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.routeTableId
              toFieldPath: spec.forProvider.routeTableId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name

        - name: rt-association-snet-lakehouse-ir
          base:
            apiVersion: network.azure.upbound.io/v1beta1
            kind: SubnetRouteTableAssociation
            metadata:
              name: rt-association-snet-lakehouse-ir
            spec:
              forProvider:
                routeTableId: 
                subnetIdSelector:
                  matchControllerRef: true
                  matchLabels:
                    planum.mblb.net/component: snet-lakehouse-ir
          patches:
            - type: FromEnvironmentFieldPath
              fromFieldPath: outputs.routeTableId
              toFieldPath: spec.forProvider.routeTableId
            - type: FromCompositeFieldPath
              fromFieldPath: spec.providerConfigName
              toFieldPath: spec.providerConfigRef.name